.transition (@transition:"") {
	-webkit-transition: @transition;
       -moz-transition: @transition;
         -o-transition: @transition;
         -ms-transition: @transition;
            transition: @transition;
}

.transition-delay (@delay:0.3s) {
    -webkit-transition-delay:@delay;
       -moz-transition-delay:@delay;
         -o-transition-delay:@delay;
         -ms-transition-delay:@delay;
            transition-delay:@delay;
}

.opacity (@alpha:1) {
    opacity: @alpha;
    -webkit-opacity: @alpha;
    -moz-opacity: @alpha;    
    -ms-opacity: @alpha;    
    -o-opacity: @alpha;    
    
    @opacityPercentage: @alpha * 100;
    // -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=(@{opacityPercentage}))"; 
    // filter: ~"alpha(opacity = (@{opacityPercentage}))";
}

.debug {
    border:1px solid red;
}

.cover-background (){
    background-repeat: no-repeat;
    background-position: center center;
    background-attachment: fixed;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

.clearfix {
    zoom: 1;
    &:before, &:after { content: ""; display: table; }
    &:after { clear: both; }
}

.rounded(@radius: 4px) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}


.user-select(...) {
    -webkit-user-select:@arguments;
    -moz-user-select:@arguments;
    -ms-user-select:@arguments;
    -o-user-select:@arguments;
    user-select:@arguments;
}

.transform-origin (...) {
    -webkit-transform-origin: @arguments;
    -moz-transform-origin: @arguments;
    -o-transform-origin: @arguments;
    transform-origin: @arguments;
    }
.perspective (...) {
    -webkit-perspective: @arguments;
    -moz-perspective: @arguments;
    -o-perspective: @arguments;
    perspective: @arguments;
    }
.transform (...) {
    -webkit-transform: @arguments;
    -moz-transform: @arguments;
    -o-transform: @arguments;
    transform: @arguments;
    }
.transform3d (...) {
    -webkit-transform: @arguments;
    -webkit-transform-style: preserve-3d;
    -moz-transform: @arguments;
    -moz-transform-style: preserve-3d;
    -o-transform: @arguments;
    -o-transform-style: preserve-3d;
    transform: @arguments;
    transform-style: preserve-3d;
}
.rotate (@rotate) {
    -webkit-transform: rotate(@rotate);
    -moz-transform: rotate(@rotate);
    -o-transform: rotate(@rotate);
    transform: rotate(@rotate);
    }
.rotate3d (@deg1, @deg2:0, @deg3:0){
    -webkit-transform: rotateX(@deg1) rotateY(@deg2) rotateZ(@deg3);
    -webkit-transform-style: preserve-3d;
    -moz-transform: rotateX(@deg1) rotateY(@deg2) rotateZ(@deg3);
    -moz-transform-style: preserve-3d;
    -o-transform: rotateX(@deg1) rotateY(@deg2) rotateZ(@deg3);
    -o-transform-style: preserve-3d;
    transform: rotateX(@deg1) rotateY(@deg2) rotateZ(@deg3);
    transform-style: preserve-3d;
    }
.scale (@scale) {
    -webkit-transform: scale(@scale);
    -moz-transform: scale(@scale);
    -o-transform: scale(@scale);
    transform: scale(@scale);
    }
.scale (@scale1,@scale2) {
    -webkit-transform: scale(@scale1,@scale2);
    -moz-transform: scale(@scale1,@scale2);
    -o-transform: scale(@scale1,@scale2);
    transform: scale(@scale1,@scale2);
    }
.scaleX (@scale) {
    -webkit-transform: scaleX(@scale);
    -moz-transform: scaleX(@scale);
    -o-transform: scaleX(@scale);
    transform: scaleX(@scale);
    }
.scaleY (@scale) {
    -webkit-transform: scaleY(@scale);
    -moz-transform: scaleY(@scale);
    -o-transform: scaleY(@scale);
    transform: scaleY(@scale);
    }




.animation (...) {
    -webkit-animation: @arguments;
    -moz-animation: @arguments;
    -o-animation: @arguments;
    animation: @arguments;
}



/* .css-gradient(#dfdfdf,#f8f8f8); */
.css-gradient(@from: #dfdfdf, @to: #f8f8f8,@deg:0) {
    background-color: @to;
    background-image: -webkit-gradient(linear, left top, left bottom, from(@from), to(@to));
    background-image: -webkit-linear-gradient(top, @from, @to);
    background-image: -moz-linear-gradient(top, @from, @to);
    background-image: -o-linear-gradient(top, @from, @to);
    background-image: linear-gradient(to bottom, @from, @to);
}


